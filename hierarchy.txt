components:
    - board
        - children: squares
    - squares
        - children: pieces 
    - pieces
        - children: none
board:
    state:
        {
            1-64: {occupied: (false/PieceId: int)}
        }
    methods:
        {

        }
    squares:
        state:
            {
                occupied: (false/PieceId: int),
                squareId: int,
            }
        methods:
            {
                setOccupied,
                isOccupied
            }
        pieces:
            state:
                {
                    currentPossition: (squareIds: int),
                    attackingSquares: [squareIds: int],
                    dead: boolean
                }
            methods:
                {
                    setCurrentPossition,
                    setAttackingSquares,
                    setDead,
                    onDragStart: (event, taskName) => event.dataTransfer.setData("taskName", taskName), maybe inside parent
                }
            dynamicAttributes: 
                    {
                        id: int,
                        className: string,
                        body: shape 
                    }
                shapes:
                    collection of html elements and css styles to form the shape of the pieces